{"version":3,"file":"gallery.service.js","sourceRoot":"","sources":["../inlined/service/gallery.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Optional } from '@angular/core';\n\nimport { GalleryState, GalleryImage } from './gallery.state';\nimport { GalleryConfig } from '../config/gallery.config';\nimport { defaultState, defaultConfig } from '../config/gallery.default';\n\nimport { get } from '../utils/get';\nimport { Subject } from 'rxjs';\n\nimport { BehaviorSubject, Observable, of, interval as rxInterval } from 'rxjs';\nimport { switchMap, tap, takeWhile, finalize } from 'rxjs/operators';\n\nexport class GalleryService {\n\n  /** Gallery state */\n  state: BehaviorSubject<GalleryState>;\n  /** Gallery config */\n  config: GalleryConfig = defaultConfig;\n  /** Gallery slide show player */\n  player: Subject<number>;\n\n  constructor(@Optional() config: GalleryConfig) {\n\n    /** Initialize the state */\n    this.state = new BehaviorSubject<GalleryState>(defaultState);\n    /** Initialize the config */\n    this.config = Object.assign({}, defaultConfig, config);\n\n    /** Initialize the player for play/pause commands */\n    this.player = new Subject();\n    this.player.pipe(switchMap((interval) => (interval) ? this.playerEngine(interval) : of(null))).subscribe();\n  }\n\n  /** Load images and reset the state */\n  load(images: GalleryImage[]) {\n\n    this.state.next({\n      images: images,\n      currIndex: 0,\n      hasNext: images.length > 1,\n      hasPrev: false,\n      active: false\n    });\n  }\n\n  /** Set current image and update the state */\n  set(index: number) {\n    const state = this.state.getValue();\n\n    this.state.next(Object.assign({}, state, {\n      prevIndex: state.currIndex,\n      currIndex: index,\n      hasNext: index < get(state, 'images.length', 0) - 1,\n      hasPrev: index > 0,\n      active: true\n    }));\n  }\n\n  /** Go to next image and update the state */\n  next() {\n    const state = this.state.getValue();\n\n    if (state.hasNext) {\n      const index = (state.currIndex || 0) + 1;\n      this.set(index);\n    } else {\n      this.set(0);\n    }\n  }\n\n  /** Go to previous image and update the state */\n  prev() {\n    const state = this.state.getValue();\n\n    if (state.hasPrev) {\n      const index = (state.currIndex || 0) - 1;\n      this.set(index);\n    } else {\n      this.set(get(state, 'images.length', 0) - 1);\n    }\n  }\n\n  /** Close gallery modal if open */\n  close() {\n    const state = this.state.getValue();\n\n    this.state.next(Object.assign({}, state, {\n      active: false,\n      play: false\n    }));\n    this.stop();\n  }\n\n  /** Reset gallery with initial state */\n  reset() {\n    this.state.next(defaultState);\n    this.stop();\n  }\n\n  /** Play slide show */\n  play(interval?: number) {\n    const speed = interval || get(this.config, 'player.speed', 0) || 2000;\n\n    const state = this.state.getValue();\n    /** Open and play the gallery, 'active' opens gallery modal */\n    this.state.next(Object.assign({}, state, { play: true, active: true }));\n    this.player.next(speed);\n  }\n\n  /** End slide show */\n  stop() {\n    this.player.next(0);\n  }\n\n  playerEngine(interval?: number) {\n\n    return rxInterval(interval).pipe(\n      takeWhile(() => this.state.getValue().play || false),\n      tap(() => this.next()),\n      finalize(() => this.state.next(Object.assign({}, this.state.getValue(), { play: false }))));\n\n  }\n\n}\n"]}