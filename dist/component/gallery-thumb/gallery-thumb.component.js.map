{"version":3,"file":"gallery-thumb.component.js","sourceRoot":"","sources":["../../inlined/component/gallery-thumb/gallery-thumb.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component, Input, ChangeDetectionStrategy, ElementRef, Renderer2, OnInit\n} from '@angular/core';\n\nimport { get } from '../../utils/get';\nimport { GalleryService } from '../../service/gallery.service';\nimport { GalleryState } from '../../service/gallery.state';\nimport { GalleryThumbConfig } from '../../config';\n\ndeclare const Hammer: any;\n\n@Component({\n  selector: 'gallery-thumb',\n  template: \"\\n    <div #container class=\\\"g-thumb-container\\\" [ngStyle]=\\\"contStyle\\\">\\n\\n      <div class=\\\"g-thumbs\\\" [style.transform]=\\\"translateThumbs()\\\">\\n\\n        <div class=\\\"g-thumb\\\" *ngFor=\\\"let image of state.images; let i = index\\\"\\n             [class.g-thumb-current]=\\\"i === state.currIndex\\\"\\n             [style.width.px]=\\\"gallery.config.thumbnails.width\\\"\\n             [style.height.px]=\\\"gallery.config.thumbnails.height\\\">\\n\\n          <div class=\\\"g-thumb-image\\\" [style.backgroundImage]=\\\"getThumbImage(i)\\\"\\n               [tap] (tapClick)=\\\"gallery.set(i)\\\">\\n          </div>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n  \",\n  styles: [\"\\n    :host{display:block;z-index:1}.g-thumb-container{position:relative;z-index:2;width:100%;height:100%;left:0}.g-thumb-container,.g-thumbs{top:0;display:-ms-flexbox;display:flex}.g-thumbs{position:absolute;left:50%;-ms-flex-align:center;align-items:center;transition:transform .3s ease-in;transform:translateZ(0)}.g-thumb{padding:8px;opacity:.5;transition:all .2s linear}.g-thumb-image{cursor:pointer;width:100%;height:100%;background-position:50%;background-size:cover;box-shadow:0 0 4px rgba(0,0,0,.3)}.g-thumb-current{opacity:1;padding:2px}\\n  \"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GalleryThumbComponent implements OnInit {\n\n  @Input() state: GalleryState;\n  @Input() config: GalleryThumbConfig;\n\n  contStyle: any;\n\n  constructor(public gallery: GalleryService, private el: ElementRef, private renderer: Renderer2) {\n\n  }\n\n  ngOnInit() {\n\n    this.contStyle = this.getContainerStyle();\n\n    /** Enable gestures */\n    if (this.gallery.config.gestures) {\n      if (typeof Hammer === 'undefined') {\n\n        throw Error('[NgGallery]: HammerJS is undefined, make sure it is loaded');\n      } else {\n        const el = this.el.nativeElement;\n        const mc = new Hammer(el);\n\n        mc.on('panstart', () => {\n          this.renderer.removeClass(el, 'g-pan-reset');\n        });\n        mc.on('panend', () => {\n          this.renderer.addClass(el, 'g-pan-reset');\n        });\n\n        /** Pan left and right */\n        mc.on('pan', (e: any) => {\n          this.renderer.setStyle(el, 'transform', `translate3d(${e.deltaX}px, 0px, 0px)`);\n        });\n        /** Swipe next and prev */\n        mc.on('swipeleft', () => {\n          this.gallery.next();\n        });\n        mc.on('swiperight', () => {\n          this.gallery.prev();\n        });\n      }\n    }\n  }\n\n  translateThumbs() {\n    const x = get(this.state, 'currIndex', 0) * get(this.config, 'width', 0) + get(this.config, 'width', 0) / 2;\n    return `translate3d(${-x}px, 0, 0)`;\n  }\n\n  getContainerStyle() {\n    /** Set thumbnails position (top, bottom) */\n    const order = this.config.position === 'top' ? 0 : 2;\n    this.renderer.setStyle(this.el.nativeElement, 'order', order);\n\n    return {\n      height: this.config.height + 'px',\n      margin: this.config.space + 'px'\n    };\n  }\n\n  getThumbImage(i: number) {\n    /** Use thumbnail if presented */\n    let image = get(this.state, 'images', [])[i] || {};\n    return `url(${image.thumbnail || image.src})`;\n  }\n\n}\n"]}