{"version":3,"file":"gallery-bullets.component.js","sourceRoot":"","sources":["../../inlined/component/gallery-bullets/gallery-bullets.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAU,SAAS,EAAE,uBAAuB,EAAE,MAAM,eAAe,CAAC;AACzG,OAAO,EAAE,cAAc,EAAE,MAAM,+BAA+B,CAAC;AAU/D;IAKE,iCAAmB,OAAuB,EAAU,QAAmB,EAAU,EAAc;QAA5E,YAAO,GAAP,OAAO,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAAU,OAAE,GAAF,EAAE,CAAY;IAC/F,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YAExB,IAAI,aAAa,SAAA,EAAE,QAAQ,SAAA,EAAE,SAAS,SAAA,EAAE,OAAO,SAAA,CAAC;YAChD,IAAI,SAAS,GAAG,OAAO,EAAE,UAAU,GAAG,OAAO,CAAC;YAC9C,QAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;gBAC5B,KAAK,QAAQ;oBACX,aAAa,GAAG,KAAK,CAAC;oBACtB,SAAS,GAAG,MAAM,CAAC;oBACnB,QAAQ,GAAG,MAAM,CAAC;oBAClB,OAAO,GAAG,OAAO,CAAC;oBAClB,UAAU,GAAG,GAAG,CAAC;oBACjB,MAAM;gBACR,KAAK,MAAM;oBACT,aAAa,GAAG,QAAQ,CAAC;oBACzB,QAAQ,GAAG,MAAM,CAAC;oBAClB,SAAS,GAAG,MAAM,CAAC;oBACnB,MAAM;gBACR,KAAK,OAAO;oBACV,QAAQ,GAAG,MAAM,CAAC;oBAClB,SAAS,GAAG,MAAM,CAAC;oBACnB,aAAa,GAAG,QAAQ,CAAC;oBACzB,SAAS,GAAG,GAAG,CAAC;oBAChB,MAAM;gBACR;oBACE,MAAM;oBACN,aAAa,GAAG,KAAK,CAAC;oBACtB,SAAS,GAAG,MAAM,CAAC;oBACnB,QAAQ,GAAG,MAAM,CAAC;oBAClB,MAAM;aACT;YAED,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;YAClE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;YACpE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;YACjE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,gBAAgB,EAAE,aAAa,CAAC,CAAC;SAChF;IACH,CAAC;IA5CQ;QAAR,KAAK,EAAE;;0DAAqB;IACpB;QAAR,KAAK,EAAE;;2DAA6B;IAH1B,uBAAuB;QANnC,SAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,QAAQ,EAAE,wRAAwR;YAClS,MAAM,EAAE,CAAC,ubAAub,CAAC;YACjc,eAAe,EAAE,uBAAuB,CAAC,MAAM;SAChD,CAAC;yCAM4B,cAAc,EAAoB,SAAS,EAAc,UAAU;OALpF,uBAAuB,CAgDnC;IAAD,8BAAC;CAAA,AAhDD,IAgDC;SAhDY,uBAAuB","sourcesContent":["import { Component, ElementRef, Input, OnInit, Renderer2, ChangeDetectionStrategy } from '@angular/core';\nimport { GalleryService } from '../../service/gallery.service';\nimport { GalleryState } from '../../service/gallery.state';\nimport { GalleryBulletConfig } from '../../config';\n\n@Component({\n  selector: 'gallery-bullets',\n  template: \"\\n    <div class=\\\"g-bullet\\\"\\n         *ngFor=\\\"let image of state.images; let i = index\\\"\\n         [class.g-bullet-curr]=\\\"i === state.currIndex\\\"\\n         (click)=\\\"gallery.set(i)\\\">\\n\\n      <div class=\\\"g-bullet-inner\\\" [ngStyle]=\\\"config.style\\\"></div>\\n\\n    </div>\\n  \",\n  styles: [\"\\n    :host{position:absolute;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.g-bullet,:host{display:-ms-flexbox;display:flex}.g-bullet{cursor:pointer;z-index:1}.g-bullet-inner{margin:1em;height:4px;width:4px;background-color:hsla(0,0%,100%,.5);border-radius:2px;box-shadow:0 0 6px rgba(0,0,0,.8);transition:all .2s ease}.g-bullet-curr .g-bullet-inner{transform:scale(1.5);background-color:#fff}\\n  \"],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GalleryBulletsComponent implements OnInit {\n\n  @Input() state: GalleryState;\n  @Input() config: GalleryBulletConfig;\n\n  constructor(public gallery: GalleryService, private renderer: Renderer2, private el: ElementRef) {\n  }\n\n  ngOnInit() {\n    if (this.config.position) {\n\n      let contDirection, conWidth, conHeight, contTop;\n      let hostRight = 'unset', hostBottom = 'unset';\n      switch (this.config.position) {\n        case 'bottom':\n          contDirection = 'row';\n          conHeight = 'auto';\n          conWidth = '100%';\n          contTop = 'unset';\n          hostBottom = '0';\n          break;\n        case 'left':\n          contDirection = 'column';\n          conWidth = 'auto';\n          conHeight = '100%';\n          break;\n        case 'right':\n          conWidth = 'auto';\n          conHeight = '100%';\n          contDirection = 'column';\n          hostRight = '0';\n          break;\n        default:\n          // top\n          contDirection = 'row';\n          conHeight = 'auto';\n          conWidth = '100%';\n          break;\n      }\n\n      this.renderer.setStyle(this.el.nativeElement, 'right', hostRight);\n      this.renderer.setStyle(this.el.nativeElement, 'bottom', hostBottom);\n      this.renderer.setStyle(this.el.nativeElement, 'width', conWidth);\n      this.renderer.setStyle(this.el.nativeElement, 'height', conHeight);\n      this.renderer.setStyle(this.el.nativeElement, 'flex-direction', contDirection);\n    }\n  }\n\n}\n"]}