{"version":3,"file":"tap.directive.js","sourceRoot":"","sources":["../inlined/directive/tap.directive.ts"],"names":[],"mappings":"AAAA,6HAA6H;;;;;;;;;;AAE7H,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,YAAY,EAAE,KAAK,EAAU,MAAM,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AACtG,OAAO,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAO5D;IAKE,sBAAoB,OAAuB,EAAU,EAAc,EAAU,QAAmB;QAA5E,YAAO,GAAP,OAAO,CAAgB;QAAU,OAAE,GAAF,EAAE,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAFtF,aAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;IAGxC,CAAC;IAED,+BAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,0CAA0C;IAC1C,kCAAW,GAAX;QAAA,iBAsBC;QApBC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE;YAChC,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;gBAEjC,MAAM,KAAK,CAAC,4DAA4D,CAAC,CAAC;aAC3E;iBAAM;gBACL,8BAA8B;gBAC9B,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;oBACjC,IAAM,EAAE,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;oBAC7C,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE;wBACX,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;oBACvB,CAAC,CAAC,CAAC;iBACJ;aACF;SACF;aAAM;YACL,6BAA6B;YAC7B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,SAAS,EAAE;gBAC1D,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC;SACJ;IAEH,CAAC;IAjCQ;QAAR,KAAK,EAAE;;6CAAU;IACR;QAAT,MAAM,EAAE;;kDAA+B;IAH7B,YAAY;QAHxB,SAAS,CAAC;YACT,QAAQ,EAAE,OAAO;SAClB,CAAC;yCAM6B,cAAc,EAAc,UAAU,EAAoB,SAAS;OALrF,YAAY,CAoCxB;IAAD,mBAAC;CAAA,AApCD,IAoCC;SApCY,YAAY","sourcesContent":["/** This directive enable tap if HammerJS is loaded, otherwise it uses the normal click event (useful for thumbnail click) */\n\nimport { Directive, ElementRef, EventEmitter, Input, OnInit, Output, Renderer2 } from '@angular/core';\nimport { GalleryService } from '../service/gallery.service';\n\ndeclare const Hammer: any;\n\n@Directive({\n  selector: '[tap]'\n})\nexport class TapDirective implements OnInit {\n\n  @Input() tap: any;\n  @Output() tapClick = new EventEmitter();\n\n  constructor(private gallery: GalleryService, private el: ElementRef, private renderer: Renderer2) {\n  }\n\n  ngOnInit() {\n    this.setTapEvent();\n  }\n\n  /** Enable gestures if hammer is loaded */\n  setTapEvent() {\n\n    if (this.gallery.config.gestures) {\n      if (typeof Hammer === 'undefined') {\n\n        throw Error('[NgGallery]: HammerJS is undefined, make sure it is loaded');\n      } else {\n        /** Use tap for click event */\n        if (typeof Hammer !== 'undefined') {\n          const mc = new Hammer(this.el.nativeElement);\n          mc.on('tap', () => {\n            this.tapClick.emit();\n          });\n        }\n      }\n    } else {\n      /** Use normal click event */\n      this.renderer.setProperty(this.el.nativeElement, 'onclick', () => {\n        this.tapClick.emit();\n      });\n    }\n\n  }\n}\n"]}