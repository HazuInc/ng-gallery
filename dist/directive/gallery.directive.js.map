{"version":3,"sources":["../inlined/directive/gallery.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,UAAA,EAAY,SAAA,EAAW,KAAA,EAAc,MAAO,eAAA,CAAgB;AAChF,OAAO,EAAE,cAAA,EAAe,MAAO,4BAAA,CAA6B;AAG5D,OAAO,EAAE,UAAA,EAAW,MAAO,iBAAA,CAAkB;AAC7C,OAAO,+BAAA,CAAgC;AACvC,OAAO,0BAAA,CAA2B;AAClC,OAAO,uBAAA,CAAwB;AAC/B,OAAO,2BAAA,CAA4B;AAGnC;IAQE,0BAAmB,EAAc,EAAS,QAAmB,EAAS,OAAuB;QAA1E,OAAE,GAAF,EAAE,CAAY;QAAS,aAAQ,GAAR,QAAQ,CAAW;QAAS,YAAO,GAAP,OAAO,CAAgB;QAJ7F,YAAO,GAAa,EAAE,CAAC;IAKvB,CAAC;IAED,gCAAK,GAAL,UAAM,KAAK,EAAE,KAAK;QAChB,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,GAAG,CAAC;YAChC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QAC1B,CAAC;QAED,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IAClB,CAAC;IAED,kCAAO,GAAP,UAAQ,MAAM,EAAE,MAAM;QACpB,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,GAAG,CAAC;YACjC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5B,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;QACH,CAAC;QAGD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,mCAAQ,GAAR;QAAA,iBAkDC;QAhDC,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;QAE7G,IAAI,aAAa,GAAG;YAClB,8BAA8B;YAC9B,EAAE,CAAC,CAAC,KAAI,CAAC,OAAO,KAAK,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;gBACtC,MAAM,CAAC;YACT,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC;YAClC,CAAC;YAED,IAAM,MAAM,GAAmB,EAAE,CAAC;YAElC,oCAAoC;YACpC,IAAM,aAAa,GAAG,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;YAErD,EAAE,CAAC,CAAC,aAAa,IAAI,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC1C,IAAI,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;gBAC5C,EAAE,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;oBACrC,MAAM,CAAC;gBACT,CAAC;gBAED,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBAEpB,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,UAAC,GAAqB,EAAE,CAAC;oBAC1D,gCAAgC;oBAChC,KAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;oBACjD,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,EAAE,SAAS,EAAE;wBACxC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACtB,CAAC,CAAC,CAAC;oBAEH,uBAAuB;oBACvB,MAAM,CAAC,IAAI,CAAC;wBACV,GAAG,EAAE,GAAG,CAAC,GAAG;wBACZ,IAAI,EAAE,GAAG,CAAC,GAAG;qBACd,CAAC,CAAC;gBACL,CAAC,CAAC;qBACC,OAAO,CAAC,cAAM,OAAA,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAzB,CAAyB,CAAC;qBACxC,SAAS,EAAE,CAAC;YAEjB,CAAC;QACH,CAAC,CAAA;QACD,8BAA8B;QAC9B,IAAI,QAAQ,GAAG,IAAI,gBAAgB,CAAC,aAAa,CAAC,CAAC;QAEnD,IAAI,MAAM,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAA;QAC/C,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QACjC,aAAa,EAAE,CAAC;IAClB,CAAC;IAeH,uBAAC;AAAD,CApGA,AAoGC;;AAdM,2BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,aAAa;aACxB,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,+BAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,SAAS,GAAG;IACnB,EAAC,IAAI,EAAE,cAAc,GAAG;CACvB,EAJ6F,CAI7F,CAAC;AACK,+BAAc,GAA2C;IAChE,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;CAC9B,CAAC","file":"gallery.directive.js","sourceRoot":"","sourcesContent":["import { Directive, ElementRef, Renderer2, Input, OnInit } from '@angular/core';\nimport { GalleryService } from '../service/gallery.service';\nimport { GalleryImage } from '../service/gallery.state';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/fromEvent';\nimport 'rxjs/add/observable/from';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/finally';\n\n\nexport class GalleryDirective implements OnInit {\n\n  // A flag to check if content has changed\n  content;\n  srcList: string[] = [];\n\n   gallerize: string;\n\n  constructor(public el: ElementRef, public renderer: Renderer2, public gallery: GalleryService) {\n  }\n\n  pluck(array, field) {\n    let s = [];\n    for (let i = array.length; i--;) {\n      s.push(array[i][field]);\n    }\n\n    return s.sort();\n  }\n\n  isEqual(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n\n    for (let i = array1.length; i--;) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n\n\n    return true;\n  }\n\n  ngOnInit() {\n\n    var target = this.gallerize ? this.el.nativeElement.querySelectorAll(this.gallerize) : this.el.nativeElement;\n\n    var updateGallery = () => {\n      // skip if content is the same\n      if (this.content === target.innerText) {\n        return;\n      }\n      else {\n        this.content = target.innerText;\n      }\n\n      const images: GalleryImage[] = [];\n\n      // get all img elements from content\n      const imageElements = target.querySelectorAll(`img`);\n\n      if (imageElements && imageElements.length) {\n        let srcs = this.pluck(imageElements, 'src');\n        if (this.isEqual(this.srcList, srcs)) {\n          return;\n        }\n\n        this.srcList = srcs;\n\n        Observable.from(imageElements).map((img: HTMLImageElement, i) => {\n          // add click event to the images\n          this.renderer.setStyle(img, 'cursor', 'pointer');\n          this.renderer.setProperty(img, 'onclick', () => {\n            this.gallery.set(i);\n          });\n\n          // create an image item\n          images.push({\n            src: img.src,\n            text: img.alt\n          });\n        })\n          .finally(() => this.gallery.load(images))\n          .subscribe();\n\n      }\n    }\n    // create an observer instance\n    var observer = new MutationObserver(updateGallery);\n\n    var config = { subtree: true, childList: true }\n    observer.observe(target, config);\n    updateGallery();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[gallerize]'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: GalleryService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'gallerize': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}