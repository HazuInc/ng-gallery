{"version":3,"sources":["ng://gallery-lib/lib/config/gallery.default.ts","ng://gallery-lib/lib/utils/get.ts","ng://gallery-lib/lib/service/gallery.service.ts","ng://gallery-lib/lib/component/gallery/gallery.component.ts","ng://gallery-lib/lib/component/gallery-bullets/gallery-bullets.component.ts","ng://gallery-lib/lib/component/gallery-image/gallery-image.animation.ts","ng://gallery-lib/lib/component/gallery-image/gallery-image.component.ts","ng://gallery-lib/lib/component/gallery-loader/gallery-loader.component.ts","ng://gallery-lib/lib/component/gallery-main/gallery-main.component.ts","ng://gallery-lib/lib/component/gallery-modal/gallery-modal.component.ts","ng://gallery-lib/lib/component/gallery-nav/gallery-nav.component.ts","ng://gallery-lib/lib/component/gallery-player/gallery-player.component.ts","ng://gallery-lib/lib/component/gallery-text/gallery-text.component.ts","ng://gallery-lib/lib/component/gallery-thumb/gallery-thumb.component.ts","ng://gallery-lib/lib/directive/gallery.directive.ts","ng://gallery-lib/lib/utils/isEqual.ts","ng://gallery-lib/lib/directive/lazy.directive.ts","ng://gallery-lib/lib/directive/tap.directive.ts","ng://gallery-lib/lib/gallery.module.ts"],"sourcesContent":["import { GalleryState } from '../service/gallery.state';\r\nimport { GalleryConfig } from './gallery.config';\r\n\r\nexport const defaultState: GalleryState = {\r\n  images: undefined,\r\n  prevIndex: 0,\r\n  currIndex: 0,\r\n  hasNext: undefined,\r\n  hasPrev: undefined,\r\n  active: false\r\n};\r\n\r\nexport const defaultConfig: GalleryConfig = {\r\n  style: {\r\n    background: '#121519',\r\n    width: '900px',\r\n    height: '500px'\r\n  },\r\n  animation: 'fade',\r\n  loader: {\r\n    width: '50px',\r\n    height: '50px',\r\n    position: 'center',\r\n    icon: 'oval'\r\n  },\r\n  description: {\r\n    position: 'bottom',\r\n    overlay: false,\r\n    text: true,\r\n    counter: true,\r\n    style: {\r\n      color: 'red'\r\n    }\r\n  },\r\n  player: {\r\n    autoplay: false,\r\n    speed: 3000\r\n  },\r\n  thumbnails: {\r\n    width: 120,\r\n    height: 90,\r\n    position: 'left',\r\n    space: 30\r\n  }\r\n};\r\n\r\n\r\n\r\n","export function get(obj: any, path: string, def: any = undefined) {\r\n  if (!obj || !path) {\r\n    return def;\r\n  }\r\n\r\n  let arr = path.split('.');\r\n  let current = obj;\r\n\r\n  for (let i = 0; i < arr.length; i++) {\r\n    if (!current[arr[i]]){\r\n      return def;\r\n    }\r\n    current = current[arr[i]];\r\n  }\r\n\r\n  return current || def;\r\n\r\n}","import { Injectable, Optional } from '@angular/core';\r\n\r\nimport { GalleryState, GalleryImage } from './gallery.state';\r\nimport { GalleryConfig } from '../config/gallery.config';\r\nimport { defaultState, defaultConfig } from '../config/gallery.default';\r\n\r\nimport { get } from '../utils/get';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { BehaviorSubject, Observable, of, interval as rxInterval } from 'rxjs';\r\nimport { switchMap, tap, takeWhile, finalize } from 'rxjs/operators';\r\n\r\nexport class GalleryService {\r\n\r\n  /** Gallery state */\r\n  state: BehaviorSubject<GalleryState>;\r\n  /** Gallery config */\r\n  config: GalleryConfig = defaultConfig;\r\n  /** Gallery slide show player */\r\n  player: Subject<number>;\r\n\r\n  constructor(@Optional() config: GalleryConfig) {\r\n\r\n    /** Initialize the state */\r\n    this.state = new BehaviorSubject<GalleryState>(defaultState);\r\n    /** Initialize the config */\r\n    this.config = Object.assign({}, defaultConfig, config);\r\n\r\n    /** Initialize the player for play/pause commands */\r\n    this.player = new Subject();\r\n    this.player.pipe(switchMap((interval) => (interval) ? this.playerEngine(interval) : of(null))).subscribe();\r\n  }\r\n\r\n  /** Load images and reset the state */\r\n  load(images: GalleryImage[]) {\r\n\r\n    this.state.next({\r\n      images: images,\r\n      currIndex: 0,\r\n      hasNext: images.length > 1,\r\n      hasPrev: false,\r\n      active: false\r\n    });\r\n  }\r\n\r\n  /** Set current image and update the state */\r\n  set(index: number) {\r\n    const state = this.state.getValue();\r\n\r\n    this.state.next(Object.assign({}, state, {\r\n      prevIndex: state.currIndex,\r\n      currIndex: index,\r\n      hasNext: index < get(state, 'images.length', 0) - 1,\r\n      hasPrev: index > 0,\r\n      active: true\r\n    }));\r\n  }\r\n\r\n  /** Go to next image and update the state */\r\n  next() {\r\n    const state = this.state.getValue();\r\n\r\n    if (state.hasNext) {\r\n      const index = (state.currIndex || 0) + 1;\r\n      this.set(index);\r\n    } else {\r\n      this.set(0);\r\n    }\r\n  }\r\n\r\n  /** Go to previous image and update the state */\r\n  prev() {\r\n    const state = this.state.getValue();\r\n\r\n    if (state.hasPrev) {\r\n      const index = (state.currIndex || 0) - 1;\r\n      this.set(index);\r\n    } else {\r\n      this.set(get(state, 'images.length', 0) - 1);\r\n    }\r\n  }\r\n\r\n  /** Close gallery modal if open */\r\n  close() {\r\n    const state = this.state.getValue();\r\n\r\n    this.state.next(Object.assign({}, state, {\r\n      active: false,\r\n      play: false\r\n    }));\r\n    this.stop();\r\n  }\r\n\r\n  /** Reset gallery with initial state */\r\n  reset() {\r\n    this.state.next(defaultState);\r\n    this.stop();\r\n  }\r\n\r\n  /** Play slide show */\r\n  play(interval?: number) {\r\n    const speed = interval || get(this.config, 'player.speed', 0) || 2000;\r\n\r\n    const state = this.state.getValue();\r\n    /** Open and play the gallery, 'active' opens gallery modal */\r\n    this.state.next(Object.assign({}, state, { play: true, active: true }));\r\n    this.player.next(speed);\r\n  }\r\n\r\n  /** End slide show */\r\n  stop() {\r\n    this.player.next(0);\r\n  }\r\n\r\n  playerEngine(interval?: number) {\r\n\r\n    return rxInterval(interval).pipe(\r\n      takeWhile(() => this.state.getValue().play || false),\r\n      tap(() => this.next()),\r\n      finalize(() => this.state.next(Object.assign({}, this.state.getValue(), { play: false }))));\r\n\r\n  }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\r\nimport { GalleryService } from '../../service/gallery.service';\r\n\r\n@Component({\r\n  selector: 'gallery',\r\n  template: '<gallery-main *ngIf=\"gallery.state | async as state\" [state]=\"state\" [config]=\"gallery.config\"></gallery-main>',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./gallery.component.scss']\r\n})\r\nexport class GalleryComponent implements OnDestroy {\r\n\r\n  constructor(public gallery: GalleryService) {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.gallery.reset();\r\n  }\r\n\r\n}\r\n","import { Component, ElementRef, Input, OnInit, Renderer2, ChangeDetectionStrategy } from '@angular/core';\r\nimport { GalleryService } from '../../service/gallery.service';\r\nimport { GalleryState } from '../../service/gallery.state';\r\nimport { GalleryBulletConfig } from '../../config';\r\n\r\n@Component({\r\n  selector: 'gallery-bullets',\r\n  templateUrl: './gallery-bullets.component.html',\r\n  styleUrls: ['./gallery-bullets.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GalleryBulletsComponent implements OnInit {\r\n\r\n  @Input() state: GalleryState;\r\n  @Input() config: GalleryBulletConfig;\r\n\r\n  constructor(public gallery: GalleryService, private renderer: Renderer2, private el: ElementRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.config.position) {\r\n\r\n      let contDirection, conWidth, conHeight, contTop;\r\n      let hostRight = 'unset', hostBottom = 'unset';\r\n      switch (this.config.position) {\r\n        case 'bottom':\r\n          contDirection = 'row';\r\n          conHeight = 'auto';\r\n          conWidth = '100%';\r\n          contTop = 'unset';\r\n          hostBottom = '0';\r\n          break;\r\n        case 'left':\r\n          contDirection = 'column';\r\n          conWidth = 'auto';\r\n          conHeight = '100%';\r\n          break;\r\n        case 'right':\r\n          conWidth = 'auto';\r\n          conHeight = '100%';\r\n          contDirection = 'column';\r\n          hostRight = '0';\r\n          break;\r\n        default:\r\n          // top\r\n          contDirection = 'row';\r\n          conHeight = 'auto';\r\n          conWidth = '100%';\r\n          break;\r\n      }\r\n\r\n      this.renderer.setStyle(this.el.nativeElement, 'right', hostRight);\r\n      this.renderer.setStyle(this.el.nativeElement, 'bottom', hostBottom);\r\n      this.renderer.setStyle(this.el.nativeElement, 'width', conWidth);\r\n      this.renderer.setStyle(this.el.nativeElement, 'height', conHeight);\r\n      this.renderer.setStyle(this.el.nativeElement, 'flex-direction', contDirection);\r\n    }\r\n  }\r\n\r\n}\r\n","import { transition, state, trigger, style, animate } from '@angular/animations';\r\nexport const animation: any = [\r\n  trigger('imgAnimate', [\r\n    state('fade', style({ opacity: 1 })),\r\n    transition('none => fade', [\r\n      style({\r\n        opacity: 0\r\n      }),\r\n      animate('0.5s ease-in')\r\n    ])\r\n  ])\r\n];\r\n// export const animation: AnimationEntryMetadata = [\r\n//   trigger('imgIn', [\r\n//     state('none', style({ opacity: 1 })),\r\n//     state('slideRight', style({ transform: 'translate3d(0, 0, 0)' })),\r\n//     state('slideLeft', style({ transform: 'translate3d(0, 0, 0)' })),\r\n//     transition('slideLeft <=> *', [\r\n//       style({\r\n//         transform: 'translate3d(100%, 0, 0)'\r\n//       }),\r\n//       animate('0.5s ease-in')\r\n//     ]),\r\n//     transition('slideRight <=> *', [\r\n//       style({\r\n//         transform: 'translate3d(-100%, 0, 0)'\r\n//       }),\r\n//       animate('0.5s ease-in')\r\n//     ]),\r\n//     transition('fade <=> *', [\r\n//       style({\r\n//         opacity: 0\r\n//       }),\r\n//       animate('0.5s ease-in')\r\n//     ]),\r\n//   ]),\r\n//   trigger('imgOut', [\r\n//     state('slideRight', style({ transform: 'translate3d(100%, 0, 0)' })),\r\n//     state('slideLeft', style({ transform: 'translate3d(-100%, 0, 0)' })),\r\n//     state('fade', style({ opacity: 0 })),\r\n//     state('none', style({ opacity: 1 })),\r\n//     transition('slideLeft <=> *', [\r\n//       style({\r\n//         transform: 'translate3d(0, 0, 0)'\r\n//       }),\r\n//       animate('0.5s ease-in')\r\n//     ]),\r\n//     transition('slideRight <=> *', [\r\n//       style({\r\n//         transform: 'translate3d(0, 0, 0)'\r\n//       }),\r\n//       animate('0.5s ease-in')\r\n//     ]),\r\n//     transition('fade <=> *', [\r\n//       style({\r\n//         opacity: 1\r\n//       }),\r\n//       animate('1s ease-in')\r\n//     ]),\r\n//   ]),\r\n// ];\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  ElementRef,\r\n  Renderer2\r\n} from '@angular/core';\r\nimport { GalleryState } from '../../service/gallery.state';\r\nimport { GalleryConfig } from '../../config';\r\nimport { GalleryService } from '../../service/gallery.service';\r\nimport { animation } from './gallery-image.animation';\r\n\r\ndeclare const Hammer: any;\r\n\r\n@Component({\r\n  selector: 'gallery-image',\r\n  templateUrl: './gallery-image.component.html',\r\n  styleUrls: ['./gallery-image.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: animation\r\n})\r\nexport class GalleryImageComponent implements OnInit {\r\n\r\n  @Input() state: GalleryState;\r\n  @Input() config: GalleryConfig;\r\n  loading: boolean;\r\n  animate: string;\r\n\r\n  constructor(public gallery: GalleryService, private el: ElementRef, private renderer: Renderer2) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    /** Enable gestures */\r\n    if (this.config.gestures) {\r\n      if (typeof Hammer === 'undefined') {\r\n\r\n        throw Error('[NgGallery]: HammerJS is undefined, make sure it is loaded');\r\n      } else {\r\n\r\n        const el = this.el.nativeElement;\r\n        const mc = new Hammer(el);\r\n\r\n        mc.on('panstart', () => {\r\n          this.renderer.removeClass(el, 'g-pan-reset');\r\n        });\r\n        mc.on('panend', () => {\r\n          this.renderer.addClass(el, 'g-pan-reset');\r\n        });\r\n        mc.on('pan', (e: any) => {\r\n          this.renderer.setStyle(el, 'transform', `translate3d(${e.deltaX}px, 0px, 0px)`);\r\n        });\r\n        /** Swipe next and prev */\r\n        mc.on('swipeleft', () => {\r\n          this.gallery.next();\r\n        });\r\n        mc.on('swiperight', () => {\r\n          this.gallery.prev();\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  imageLoad(done: boolean) {\r\n    this.loading = !done;\r\n    /** TODO: Add some animation */\r\n    \r\n    if (!done) {\r\n      this.animate = 'none';\r\n    } else {\r\n      switch (this.config.animation) {\r\n        case 'fade':\r\n          this.animate = 'fade';\r\n          break;\r\n        default:\r\n          this.animate = 'none';\r\n      }\r\n      //     this.animate = 'none';\r\n      //   case 'slide':\r\n      //     this.animate = (this.state.currIndex > this.state.prevIndex) ? 'slideLeft' : 'slideRight';\r\n      //     break;\r\n      //   default:\r\n      //     this.animate = 'none';\r\n    }\r\n\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { GalleryService } from '../../service/gallery.service';\r\nimport { GalleryLoaderConfig } from '../../config';\r\n\r\n@Component({\r\n  selector: 'gallery-loader',\r\n  templateUrl: './gallery-loader.component.html',\r\n  styleUrls: ['./gallery-loader.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GalleryLoaderComponent implements OnInit {\r\n\r\n  @Input() config: GalleryLoaderConfig;\r\n  icon: any;\r\n  styles: any;\r\n\r\n  constructor(public gallery: GalleryService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.icon = this.getIcon();\r\n    this.styles = this.getStyle();\r\n  }\r\n\r\n  getIcon() {\r\n    switch (this.config.icon) {\r\n      case 'puff':\r\n        return 'https://cdn.rawgit.com/SamHerbert/SVG-Loaders/75b65ef5/svg-loaders/puff.svg';\r\n\r\n      case 'spinning-circles':\r\n        return 'https://cdn.rawgit.com/SamHerbert/SVG-Loaders/75b65ef5/svg-loaders/ball-triangle.svg';\r\n\r\n      case 'three-dots':\r\n        return 'https://cdn.rawgit.com/SamHerbert/SVG-Loaders/75b65ef5/svg-loaders/three-dots.svg';\r\n\r\n      case 'oval':\r\n        return 'https://cdn.rawgit.com/SamHerbert/SVG-Loaders/75b65ef5/svg-loaders/oval.svg';\r\n\r\n      case 'ball-triangle':\r\n        return 'https://cdn.rawgit.com/SamHerbert/SVG-Loaders/75b65ef5/svg-loaders/ball-triangle.svg';\r\n\r\n      case 'bars':\r\n        return 'https://cdn.rawgit.com/SamHerbert/SVG-Loaders/75b65ef5/svg-loaders/bars.svg';\r\n\r\n      case 'tail-spin':\r\n        return 'https://cdn.rawgit.com/SamHerbert/SVG-Loaders/75b65ef5/svg-loaders/tail-spin.svg';\r\n\r\n      default:\r\n        return this.config.icon;\r\n    }\r\n  }\r\n\r\n  getStyle() {\r\n    switch (this.config.position) {\r\n      case 'topLeft':\r\n        return {\r\n          'align-items': 'flex-start',\r\n          'justify-content': 'flex-start'\r\n        };\r\n\r\n      case 'topRight':\r\n        return {\r\n          'align-items': 'flex-start',\r\n          'justify-content': 'flex-end'\r\n        };\r\n      case 'bottomLeft':\r\n        return {\r\n          'align-items': 'flex-end',\r\n          'justify-content': 'flex-start'\r\n        };\r\n      case 'bottomRight':\r\n        return {\r\n          'align-items': 'flex-end',\r\n          'justify-content': 'flex-end'\r\n        };\r\n\r\n      default:\r\n        return {\r\n          'align-items': 'center',\r\n          'justify-content': 'center'\r\n        };\r\n    }\r\n  }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { GalleryState } from '../../service/gallery.state';\r\nimport { GalleryConfig } from '../../config';\r\nimport { GalleryService } from '../../service/gallery.service';\r\n\r\n@Component({\r\n  selector: 'gallery-main',\r\n  templateUrl: './gallery-main.component.html',\r\n  styleUrls: ['./gallery-main.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class GalleryMainComponent implements OnInit {\r\n\r\n  @Input() state: GalleryState;\r\n  @Input() config: GalleryConfig;\r\n  loading: any;\r\n  thumbDirection: any;\r\n\r\n  constructor(public gallery: GalleryService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // shortcut for thumbnail config\r\n    const thumbPos = this.config.thumbnails ? this.config.thumbnails.position : 0;\r\n    this.thumbDirection = (thumbPos === 'left' || thumbPos === 'right') ? 'row' : 'column';\r\n  }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, HostListener, Input, OnDestroy } from '@angular/core';\r\nimport { transition, state, trigger, style, animate } from '@angular/animations';\r\nimport { GalleryService } from '../../service/gallery.service';\r\n\r\n@Component({\r\n  selector: 'gallery-modal',\r\n  templateUrl: './gallery-modal.component.html',\r\n  styleUrls: ['./gallery-modal.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('popup', [\r\n      state('in', style({ opacity: 0.8 , transform: 'scale(0.2) translate3d(0, 100px, 0)'})),\r\n      transition('void => *', [\r\n        style({  opacity: 0.8 , transform: 'scale(0.2) translate3d(0, 100px, 0)' }),\r\n        animate(300)\r\n      ]),\r\n      transition('* => void', [\r\n        animate(300, style({  opacity: 1 , transform: 'scale(1)  translate3d(0, 0, 0)' }))\r\n      ])\r\n    ])]\r\n})\r\nexport class GalleryModalComponent implements OnDestroy {\r\n\r\n  @Input() closeButton = true;\r\n  \r\n\r\n  /** Activate keyboard for navigation */\r\n  @HostListener('body:keydown', ['$event'])\r\n  keyboardInput(event: KeyboardEvent) {\r\n    if (!this.gallery.state.getValue().active){\r\n      return;\r\n    }\r\n    event.stopPropagation();\r\n    switch (event.keyCode) {\r\n      case 37:  // prev\r\n        this.gallery.prev();\r\n        break;\r\n      case 39:  // next\r\n        this.gallery.next();\r\n        break;\r\n      case 13:  // enter\r\n        this.gallery.next();\r\n        break;\r\n      case 27:  // esc\r\n        this.gallery.close();\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  constructor(public gallery: GalleryService) {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.gallery.reset();\r\n  }\r\n\r\n}\r\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {GalleryService} from '../../service/gallery.service';\r\n\r\n@Component({\r\n  selector: 'gallery-nav',\r\n  templateUrl: './gallery-nav.component.html',\r\n  styleUrls: ['./gallery-nav.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GalleryNavComponent {\r\n\r\n  @Input() state: any;\r\n\r\n  constructor(public gallery: GalleryService) {\r\n  }\r\n\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\r\nimport { GalleryService } from '../../service/gallery.service';\r\nimport { GalleryPlayConfig } from '../../config';\r\nimport { GalleryState } from '../../service/gallery.state';\r\n\r\n@Component({\r\n  selector: 'gallery-player',\r\n  templateUrl: './gallery-player.component.html',\r\n  styleUrls: ['./gallery-player.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GalleryPlayerComponent implements OnInit {\r\n\r\n  @Input() config: GalleryPlayConfig;\r\n  @Input() state: GalleryState;\r\n\r\n  constructor(public gallery: GalleryService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    /** Start auto-play if enabled */\r\n    if (this.config.autoplay) {\r\n      this.gallery.play();\r\n    }\r\n\r\n    /** TODO: Display status bar */\r\n  }\r\n\r\n}\r\n","import {Component, Input, OnInit, ElementRef, Renderer2, ChangeDetectionStrategy} from '@angular/core';\r\nimport {GalleryState} from '../../service/gallery.state';\r\nimport {GalleryDescConfig} from '../../config';\r\n\r\n@Component({\r\n  selector: 'gallery-text',\r\n  templateUrl: './gallery-text.component.html',\r\n  styleUrls: ['./gallery-text.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GalleryTextComponent implements OnInit {\r\n\r\n  @Input() state: GalleryState;\r\n  @Input() config: GalleryDescConfig;\r\n\r\n  constructor(private el: ElementRef, private renderer: Renderer2) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    const el = this.el.nativeElement;\r\n    // text overlay\r\n    if (this.config.overlay) {\r\n      this.renderer.setStyle(el, 'position', 'absolute');\r\n    }\r\n\r\n    // text position\r\n    if (this.config.position === 'top') {\r\n      this.renderer.setStyle(el, 'order', 0);\r\n      this.renderer.setStyle(el, 'top', 0);\r\n      this.renderer.setStyle(el, 'bottom', 'unset');\r\n    } else {\r\n      this.renderer.setStyle(el, 'order', 2);\r\n      this.renderer.setStyle(el, 'top', 'unset');\r\n      this.renderer.setStyle(el, 'bottom', 0);\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component, Input, ChangeDetectionStrategy, ElementRef, Renderer2, OnInit\r\n} from '@angular/core';\r\n\r\nimport { get } from '../../utils/get';\r\nimport { GalleryService } from '../../service/gallery.service';\r\nimport { GalleryState } from '../../service/gallery.state';\r\nimport { GalleryThumbConfig } from '../../config';\r\n\r\ndeclare const Hammer: any;\r\n\r\n@Component({\r\n  selector: 'gallery-thumb',\r\n  templateUrl: './gallery-thumb.component.html',\r\n  styleUrls: ['./gallery-thumb.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GalleryThumbComponent implements OnInit {\r\n\r\n  @Input() state: GalleryState;\r\n  @Input() config: GalleryThumbConfig;\r\n\r\n  contStyle: any;\r\n\r\n  constructor(public gallery: GalleryService, private el: ElementRef, private renderer: Renderer2) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.contStyle = this.getContainerStyle();\r\n\r\n    /** Enable gestures */\r\n    if (this.gallery.config.gestures) {\r\n      if (typeof Hammer === 'undefined') {\r\n\r\n        throw Error('[NgGallery]: HammerJS is undefined, make sure it is loaded');\r\n      } else {\r\n        const el = this.el.nativeElement;\r\n        const mc = new Hammer(el);\r\n\r\n        mc.on('panstart', () => {\r\n          this.renderer.removeClass(el, 'g-pan-reset');\r\n        });\r\n        mc.on('panend', () => {\r\n          this.renderer.addClass(el, 'g-pan-reset');\r\n        });\r\n\r\n        /** Pan left and right */\r\n        mc.on('pan', (e: any) => {\r\n          this.renderer.setStyle(el, 'transform', `translate3d(${e.deltaX}px, 0px, 0px)`);\r\n        });\r\n        /** Swipe next and prev */\r\n        mc.on('swipeleft', () => {\r\n          this.gallery.next();\r\n        });\r\n        mc.on('swiperight', () => {\r\n          this.gallery.prev();\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  translateThumbs() {\r\n    const x = get(this.state, 'currIndex', 0) * get(this.config, 'width', 0) + get(this.config, 'width', 0) / 2;\r\n    return `translate3d(${-x}px, 0, 0)`;\r\n  }\r\n\r\n  getContainerStyle() {\r\n    /** Set thumbnails position (top, bottom) */\r\n    const order = this.config.position === 'top' ? 0 : 2;\r\n    this.renderer.setStyle(this.el.nativeElement, 'order', order);\r\n\r\n    return {\r\n      height: this.config.height + 'px',\r\n      margin: this.config.space + 'px'\r\n    };\r\n  }\r\n\r\n  getThumbImage(i: number) {\r\n    /** Use thumbnail if presented */\r\n    let image = get(this.state, 'images', [])[i] || {};\r\n    return `url(${image.thumbnail || image.src})`;\r\n  }\r\n\r\n}\r\n","import { Directive, ElementRef, Renderer2, Input, OnInit } from '@angular/core';\r\nimport { GalleryService } from '../service/gallery.service';\r\nimport { GalleryImage } from '../service/gallery.state';\r\nimport { isEqual, pluck } from '../utils/index';\r\n\r\nimport { from } from 'rxjs';\r\nimport { map, finalize } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[gallerize]'\r\n})\r\nexport class GalleryDirective implements OnInit {\r\n\r\n  // A flag to check if content has changed\r\n  content: string;\r\n  srcList: string[] = [];\r\n\r\n  @Input() gallerize: string;\r\n  @Input() exclude: string;\r\n  @Input() subtree: string = '';\r\n  @Input() filter: Function;\r\n\r\n  constructor(public el: ElementRef, public renderer: Renderer2, public gallery: GalleryService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    let target = this.el.nativeElement;\r\n\r\n\r\n    var updateGallery = () => {\r\n\r\n      // skip if content is the same \r\n      if (!target || (this.content && this.content === target.innerText)) {\r\n        return;\r\n      }\r\n      else {\r\n        this.content = target.innerText;\r\n      }\r\n\r\n      const images: GalleryImage[] = [];\r\n\r\n      // get all img elements from content\r\n      const imageElements = target.querySelectorAll(this.subtree + ` img${this.gallerize}`)\r\n\r\n      if (!imageElements || !imageElements.length) {\r\n        this.srcList = [];\r\n        return;\r\n      }\r\n\r\n      let srcs = Array.from(imageElements).map((elem: HTMLImageElement) => {\r\n        return elem.dataset && elem.dataset.originalImageUrl ? elem.dataset.originalImageUrl : elem.src\r\n      })\r\n      //let srcs = pluck(imageElements, 'src');\r\n      let isSame = isEqual(this.srcList, srcs);\r\n      this.srcList = srcs;\r\n      from(imageElements).pipe(map((img: HTMLImageElement, i) => {\r\n        // add click event to the images\r\n        let src = img.dataset && img.dataset.originalImageUrl ? img.dataset.originalImageUrl : img.src;\r\n        this.renderer.setStyle(img, 'cursor', 'pointer');\r\n        if (!this.filter || this.filter(img)) {\r\n          this.renderer.setProperty(img, 'onclick', () => {\r\n            if (this.srcList.indexOf(src) !== -1) {\r\n              this.gallery.set(i);\r\n            }\r\n\r\n          });\r\n        }\r\n\r\n        // create an image item\r\n        images.push({\r\n          src: src,\r\n          text: img.alt\r\n        });\r\n      }),\r\n        finalize(() => {\r\n          if (!isSame) {\r\n            this.gallery.load(images)\r\n          }\r\n        }))\r\n        .subscribe();\r\n    }\r\n    // create an observer instance\r\n    var observer = new MutationObserver(updateGallery);\r\n\r\n    var config = { subtree: true, childList: true }\r\n    observer.observe(target, config);\r\n    updateGallery();\r\n  }\r\n}\r\n","export function isEqual(array1: string[] = [], array2: string[] = []) {\r\n  if (array1.length !== array2.length) {\r\n    return false;\r\n  }\r\n\r\n  // array1 = array1.sort();\r\n  // array2 = array2.sort();\r\n\r\n  for (let i = array1.length; i--;) {\r\n    if (array1[i] !== array2[i]) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}","import {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  Renderer2\r\n} from '@angular/core';\r\n\r\nimport { Observable, Subject, of } from 'rxjs';\r\nimport { switchMap, tap, takeWhile, finalize } from 'rxjs/operators';\r\n\r\n\r\n@Directive({\r\n  selector: '[lazyImage]'\r\n})\r\nexport class LazyDirective {\r\n\r\n  // Image source\r\n  @Input('lazyImage') set lazyImage(imagePath: string) {\r\n    this.getImage(imagePath);\r\n  }\r\n\r\n  /** A subject to emit only last selected image */\r\n  lazyWorker = new Subject<string>();\r\n\r\n  @Output() lazyLoad = new EventEmitter<boolean>(false);\r\n\r\n  constructor(private el: ElementRef, private renderer: Renderer2) {\r\n\r\n    // this.lazyTest.switchMap((done) => (done) ? Observable.of(done).delay(1000) : Observable.of(done)\r\n    this.lazyWorker.pipe(switchMap((done) => of(done)))\r\n      .subscribe((img) => {\r\n        if (img) {\r\n          this.renderer.setProperty(this.el.nativeElement, 'src', img);\r\n          this.lazyLoad.emit(true)\r\n        } else {\r\n          this.lazyLoad.emit(false);\r\n        }\r\n      });\r\n  }\r\n\r\n  getImage(imagePath: string) {\r\n    this.lazyWorker.next('');\r\n    const img = this.renderer.createElement('img');\r\n    img.src = imagePath;\r\n\r\n    img.onload = () => {\r\n      this.lazyWorker.next(imagePath);\r\n    };\r\n\r\n    img.onerror = (err: any) => {\r\n      console.error('[GalleryLazyDirective]:', err);\r\n      this.lazyWorker.next('');\r\n    };\r\n  }\r\n\r\n}\r\n\r\n","/** This directive enable tap if HammerJS is loaded, otherwise it uses the normal click event (useful for thumbnail click) */\r\n\r\nimport { Directive, ElementRef, EventEmitter, Input, OnInit, Output, Renderer2 } from '@angular/core';\r\nimport { GalleryService } from '../service/gallery.service';\r\n\r\ndeclare const Hammer: any;\r\n\r\n@Directive({\r\n  selector: '[tap]'\r\n})\r\nexport class TapDirective implements OnInit {\r\n\r\n  @Input() tap: any;\r\n  @Output() tapClick = new EventEmitter();\r\n\r\n  constructor(private gallery: GalleryService, private el: ElementRef, private renderer: Renderer2) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setTapEvent();\r\n  }\r\n\r\n  /** Enable gestures if hammer is loaded */\r\n  setTapEvent() {\r\n\r\n    if (this.gallery.config.gestures) {\r\n      if (typeof Hammer === 'undefined') {\r\n\r\n        throw Error('[NgGallery]: HammerJS is undefined, make sure it is loaded');\r\n      } else {\r\n        /** Use tap for click event */\r\n        if (typeof Hammer !== 'undefined') {\r\n          const mc = new Hammer(this.el.nativeElement);\r\n          mc.on('tap', () => {\r\n            this.tapClick.emit();\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      /** Use normal click event */\r\n      this.renderer.setProperty(this.el.nativeElement, 'onclick', () => {\r\n        this.tapClick.emit();\r\n      });\r\n    }\r\n\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { GalleryService } from './service/gallery.service';\r\nimport { GalleryConfig } from './config/gallery.config';\r\n\r\nimport { GalleryComponent } from './component/gallery/gallery.component';\r\nimport { GalleryNavComponent } from './component/gallery-nav/gallery-nav.component';\r\nimport { GalleryThumbComponent } from './component/gallery-thumb/gallery-thumb.component';\r\nimport { GalleryTextComponent } from './component/gallery-text/gallery-text.component';\r\nimport { GalleryImageComponent } from './component/gallery-image/gallery-image.component';\r\nimport { GalleryLoaderComponent } from './component/gallery-loader/gallery-loader.component';\r\nimport { GalleryModalComponent } from './component/gallery-modal/gallery-modal.component';\r\nimport { GalleryBulletsComponent } from './component/gallery-bullets/gallery-bullets.component';\r\nimport { GalleryPlayerComponent } from './component/gallery-player/gallery-player.component';\r\nimport { GalleryMainComponent } from './component/gallery-main/gallery-main.component';\r\n\r\nimport { GalleryDirective } from './directive/gallery.directive';\r\nimport { LazyDirective } from './directive/lazy.directive';\r\nimport { TapDirective } from './directive/tap.directive';\r\n\r\n/** Initialize ConfigService with URL */\r\nexport function galleryFactory(config: GalleryConfig) {\r\n  return new GalleryService(config);\r\n}\r\n\r\nexport const CONFIG = new InjectionToken<GalleryConfig>('config');\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    GalleryComponent,\r\n    GalleryNavComponent,\r\n    GalleryThumbComponent,\r\n    GalleryDirective,\r\n    GalleryTextComponent,\r\n    GalleryImageComponent,\r\n    GalleryLoaderComponent,\r\n    GalleryModalComponent,\r\n    GalleryBulletsComponent,\r\n    GalleryPlayerComponent,\r\n    GalleryMainComponent,\r\n    TapDirective,\r\n    LazyDirective\r\n  ],\r\n  exports: [\r\n    GalleryComponent,\r\n    GalleryDirective,\r\n    GalleryModalComponent\r\n  ]\r\n})\r\nexport class GalleryModule {\r\n  static forRoot(config?: GalleryConfig): ModuleWithProviders {\r\n\r\n    return {\r\n      ngModule: GalleryModule,\r\n      providers: [\r\n        { provide: CONFIG, useValue: config },\r\n        {\r\n          provide: GalleryService,\r\n          useFactory: galleryFactory,\r\n          deps: [CONFIG]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\n"],"names":["defaultState","images","undefined","prevIndex","currIndex","hasNext","hasPrev","active","defaultConfig","style","background","width","height","animation","loader","position","icon","description","overlay","text","counter","color","player","autoplay","speed","thumbnails","space","get","obj","path","def","arr","split","current","i","length","GalleryService","prototype","load","this","state","next","set","index","getValue","Object","assign","prev","close","play","stop","reset","interval","config","playerEngine","_this","rxInterval","pipe","takeWhile","tap","finalize","Optional","BehaviorSubject","Subject","switchMap","of","subscribe","GalleryComponent","ngOnDestroy","gallery","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","GalleryBulletsComponent","ngOnInit","contDirection","conWidth","conHeight","hostRight","hostBottom","renderer","setStyle","el","nativeElement","Renderer2","ElementRef","Input","trigger","opacity","transition","animate","GalleryImageComponent","gestures","Hammer","Error","el_1","mc","on","removeClass","addClass","e","deltaX","imageLoad","done","loading","animations","GalleryLoaderComponent","getIcon","styles","getStyle","align-items","justify-content","GalleryMainComponent","thumbPos","thumbDirection","encapsulation","ViewEncapsulation","None","GalleryModalComponent","keyboardInput","event","stopPropagation","keyCode","transform","HostListener","closeButton","GalleryNavComponent","GalleryPlayerComponent","GalleryTextComponent","GalleryThumbComponent","contStyle","getContainerStyle","translateThumbs","order","margin","getThumbImage","image","thumbnail","src","GalleryDirective","target","updateGallery","imageElements","srcs","isSame","content","innerText","querySelectorAll","subtree","gallerize","Array","from","map","elem","dataset","originalImageUrl","array1","array2","isEqual","srcList","img","filter","setProperty","indexOf","push","alt","MutationObserver","observe","childList","Directive","LazyDirective","defineProperty","imagePath","getImage","lazyWorker","createElement","onload","onerror","err","console","error","Output","lazyLoad","EventEmitter","emit","TapDirective","setTapEvent","tapClick","galleryFactory","CONFIG","InjectionToken","GalleryModule","forRoot","ngModule","providers","provide","useValue","useFactory","deps","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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"}